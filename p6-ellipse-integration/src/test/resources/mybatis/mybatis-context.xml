<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	
		
	<!-- ========================= DATASOURCE DEFINITION via JNDI ========================= -->
	<!-- When resourceRef is true, the value of jndiName will be prepended with 
		serverâ€™s JNDI directory. Consequently, the actual name used will be java:/jdbc/ellipseP6Ds. -->

	<bean  id="ellispeDataSource"
           class="org.apache.commons.dbcp.BasicDataSource"
           destroy-method="close"
           p:driverClassName="oracle.jdbc.driver.OracleDriver"
           p:url="${elips.db.connection.url}"
           p:username="${elips.db.connection.username}"
           p:password="${elips.db.connection.password}" />

	<!-- define the SqlSessionFactory, notice that configLocation is not needed 
		when you use MapperFactoryBean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
		name="P6EllipseMapper">
		<property name="dataSource" ref="ellispeDataSource" />
		<property name="configLocation"
			value="classpath:mybatis/p6-ellipse-mapping-config.xml" />
	</bean>

	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

	<!-- Enable annotation style of managing transactions -->
	<tx:annotation-driven transaction-manager="ellipseTansactionManager" />
	<!-- Declare a transaction manager -->
	<bean id="ellipseTansactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="ellispeDataSource" />
		
		<!-- Mapper Factory Bean to intialize and register mappers -->
	<bean id="ellipseDataMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="au.com.wp.corp.p6.integration.dao.mapper.P6EllipseMapper" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>

	<!-- **********************Configuration for P6 Portal ***************************************** -->

	
	<bean  id="p6PortalDataSource"
           class="org.apache.commons.dbcp.BasicDataSource"
           destroy-method="close"
           p:driverClassName="oracle.jdbc.driver.OracleDriver"
           p:url="${p6.db.connection.url}"
           p:username="${p6.db.connection.username}"
           p:password="${p6.db.connection.password}" />

	<!-- define the SqlSessionFactory, notice that configLocation is not needed 
		when you use MapperFactoryBean -->
	<bean id="p6SqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
		name="P6PortalMapper">
		<property name="dataSource" ref="p6PortalDataSource" />
		<property name="configLocation"
			value="classpath:mybatis/p6-portal-mapping-config.xml" />
	</bean>

	<bean id="p6SqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="p6SqlSessionFactory" />
	</bean>

	<!-- Enable annotation style of managing transactions -->
	<tx:annotation-driven transaction-manager="p6TransactionManager" />
	<!-- Declare a transaction manager -->
	<bean id="p6TransactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="p6PortalDataSource" />

	<!-- Mapper Factory Bean to intialize and register mappers -->
	<bean id="p6PortalDataMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="au.com.wp.corp.p6.integration.dao.mapper.P6PortalMapper" />
		<property name="sqlSessionFactory" ref="p6SqlSessionFactory" />
	</bean>
			
		
</beans>