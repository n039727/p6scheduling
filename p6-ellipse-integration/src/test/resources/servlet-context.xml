<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jms="http://www.springframework.org/schema/jms"
	xsi:schemaLocation="
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
    http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.0.xsd">


	<!-- Class that resolves ${...} placeholders against local properties and/or 
		system properties and environment variables. In case property is defined 
		more than one time, last property file is the most important -->
	<bean id="mailProperties"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>file:${properties.dir}/p6*.properties</value>
			</list>
		</property>
	</bean>
	<import resource="/mybatis/mybatis-context.xml"/>
	<tx:annotation-driven transaction-manager="transactionManager" />
	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />
	<context:component-scan base-package="au.com.wp.corp.p6" />
	
	<!-- Definitions for the Ellipse work order service. -->
    <bean id="ewsWorkOrderService" class="au.com.wp.corp.sys.corporate.common.soa.jaxws.LoggingJaxWsPortProxyFactoryBean">
        <property name="serviceInterface" value="com.mincom.enterpriseservice.ellipse.workorder.WorkOrder"/>
        <property name="wsdlDocumentUrl" value="classpath:META-INF/EwsWorkOrder.wsdl"/>
        <property name="namespaceUri" value="http://workorder.ellipse.enterpriseservice.mincom.com"/>
        <property name="serviceName" value="WorkOrderService"/>
        <property name="endpointAddress" value="${ewsWorkOrderService.endpoint}"/>
    </bean>

    <bean class="au.com.wp.corp.p6.wsclient.ellipse.impl.WsseSecurityConfigurator">
        <property name="bindingProvider" ref="ewsWorkOrderService" />
        <property name="userName" value="${ewsWorkOrderService.username}" />
        <property name="password" value="${ewsWorkOrderService.password}" />
    </bean>
    
    <!-- Definitions for the Ellipse work order task service. -->
    <bean id="ewsWorkOrderTaskService" class="au.com.wp.corp.sys.corporate.common.soa.jaxws.LoggingJaxWsPortProxyFactoryBean">
        <property name="serviceInterface" value="com.mincom.enterpriseservice.ellipse.workordertask.WorkOrderTask"/>
        <property name="wsdlDocumentUrl" value="classpath:META-INF/EwsWorkOrderTask.wsdl"/>
        <property name="namespaceUri" value="http://workordertask.ellipse.enterpriseservice.mincom.com"/>
        <property name="serviceName" value="WorkOrderTaskService"/>
        <property name="endpointAddress" value="${ewsWorkOrderTaskService.endpoint}"/>
    </bean>

    <bean class="au.com.wp.corp.p6.wsclient.ellipse.impl.WsseSecurityConfigurator">
        <property name="bindingProvider" ref="ewsWorkOrderTaskService" />
        <property name="userName" value="${ewsWorkOrderTaskService.username}" />
        <property name="password" value="${ewsWorkOrderTaskService.password}" />
    </bean>
    
     <!-- Definitions for the Ellipse transaction service. -->
    <bean id="ewsTransactionService" class="au.com.wp.corp.sys.corporate.common.soa.jaxws.LoggingJaxWsPortProxyFactoryBean">
        <property name="serviceInterface" value="com.mincom.ews.service.transaction.Transaction"/>
        <property name="wsdlDocumentUrl" value="classpath:META-INF/EwsTransaction.wsdl"/>
        <property name="namespaceUri" value="http://transaction.service.ews.mincom.com"/>
        <property name="serviceName" value="TransactionService"/>
        <property name="endpointAddress" value="${ewsTransactionService.endpoint}"/>
    </bean>

    <bean class="au.com.wp.corp.p6.wsclient.ellipse.impl.WsseSecurityConfigurator">
        <property name="bindingProvider" ref="ewsTransactionService" />
        <property name="userName" value="${ewsTransactionService.username}" />
        <property name="password" value="${ewsTransactionService.password}" />
    </bean>
</beans>
