<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE mapper PUBLIC '-//mybatis.org//DTD Mapper 3.0//EN'
  'http://mybatis.org/dtd/mybatis-3-mapper.dtd'>
<mapper namespace='au.com.wp.corp.p6.dao.mapper.P6EllipseMapper'>
	<resultMap type='ellipseActivityDTO' id='workOrderResultMap'>
		<result property='workOrderTaskId' column='WOT' />
		<result property='workGroup' column='work_group' />
		<result property='workOrderDescription' column='wo_desc' />
		<result property='taskStatus' column='Activity_Status' />
		<result property='plannedStartDate' column='plan_str_date' />
		<result property='jdCode' column='job_desc_code' />
		<result property='taskUserStatus' column='task_status_u' />
		<result property='equipmentNo' column='Equipment_no' />
		<result property='plantNoOrPickId' column='plant_no' />
		<result property='EGI' column='EGI' />
		<result property='equipmentCode' column='Equip_Item_code' />
		<result property='originalDuration' column='original_duration_hours' />
		<result property='remainingDuration' column='remaining_dur_hours' />
		<result property='estimatedLabourHours' column='est_lab_hrs' />
		<result property='requiredByDate' column='req_by_date' />
		<result property='ellipseStandardJob' column='std_job_no' />
		<result property='feeder' column='Feeder' />
		<result property='upStreamSwitch' column='upstream_switch' />
	</resultMap>
	<select id="readElipseWorkorderDetails" resultMap="workOrderResultMap">
		select a.work_order || a.wo_task_no as WOT, a.work_group as
		work_group, b.wo_desc, 'Not Started' as Activity_Status,
		case when trim(a.plan_str_date) is null then null else
		substr(a.plan_str_date, 7,2) || '/' || substr(a.plan_str_date, 5, 2)
		||'/' || substr(a.plan_str_date, 1, 4) || ' 08:00:00' end as
		plan_str_date,
		case when trim(a.plan_str_date) is null then null else
		substr(a.plan_str_date, 7,2) || '/' || substr(a.plan_str_date, 5, 2)
		||'/' || substr(a.plan_str_date, 1, 4) || ' 08:00:00' end as
		ellipe_start_date,
		a.job_desc_code, a.task_status_u, b.equip_no as Equipment_no, c.plant_no,
		c.equip_grp_id as EGI, c.item_name_code as Equip_Item_code,
		round(case when a.tsk_dur_hours > 0 then tsk_dur_hours else case when
		est_lab_hrs > 0 then est_lab_hrs / 5 else 8 end end) as
		original_duration_hours,
		round(case when a.tsk_dur_hours > 0 then tsk_dur_hours else case when
		est_lab_hrs > 0 then est_lab_hrs / 5 else 8 end end) as
		remaining_dur_hours,
		a.est_lab_hrs,
		case when trim(b.req_by_date) is null then null else substr(b.req_by_date,
		7,2) || '/' || substr(b.req_by_date, 5, 2) ||'/' ||
		substr(b.req_by_date, 1, 4) || ' 08:00:00' end as req_by_date,
		b.std_job_no,
		z.swsect_hv_fdr_nam as Feeder,
		trim(z.equip_grp_id) || ' ' || z.location_desc as upstream_switch
		from nell.msf623 a, nell.msf620 b, nell.msf600 c, (select d.equip_no,
		swsect_hv_fdr_nam, e.equip_grp_id, f.location_desc from (
		select equip_no, pick_id, swsect_hv_fdr_id, swsect_hv_fdr_nam,
		swsect_nsw_nid, rpad('N' || swsect_nsw_nid, 30) as nodeId
		from NDWu.DIST_LOCATION_ATTRIBUTE_DIM
		where curr_flg = 'Y') d, nell.msf600 e, nell.msf011 f
		where e.plant_no = d.nodeId
		and e.location = f.location) z
		where a.work_order = b.work_order
		and b.equip_no = c.equip_no
		and a.task_status_m = 'A'
   <![CDATA[and a.job_desc_code <> 'D1']]>
		and z.equip_no (+) = b.equip_no
		and a.work_group in (
		<foreach item="item" index="index" collection="list"
			separator=",">
			'${item}'
		</foreach>)
		order by 1
	</select>
</mapper>